

_ALU_IMM:
        ; DI -> ALU_B ; REG[@R] -> ALU_A ; ALU -> REG[@R] ; PC ++ -> PC ; PC ++ -> AR ; FETCH ; ISSUE
        ucode_byte_low      REG=0 CDB=#3 CRB=#0 WM=0 FETCH=1 ISSUE=1
        ucode_byte_high     LD=1,0,0,1,1 INC=1 ALU=any
        
        padding
        
        padding
        
        padding
        
_ALU_ZP8:
        
        ; DI -> AR ;
        ucode_byte_low      REG=0 CDB=#3 CRB=#0 WM=0 FETCH=0 ISSUE=0
        ucode_byte_high     LD=1,0,0,1,0 INC=0 ALU=mov
        
        ; MEM -> B ; PC ++ -> PC, AR
        ucode_byte_low      REG=0 CDB=#0 CRB=#0 WM=0 FETCH=0 ISSUE=0
        ucode_byte_high     LD=0,0,1,1,1 INC=1 ALU=any
        
        ; REG[@R] -> ALU_A ; B -> ALU_B ; ALU -> REG[@R] ; FETCH ; ISSUE
        ucode_byte_low      REG=0 CDB=#1 CRB=#0 WM=0 FETCH=1 ISSUE=1
        ucode_byte_high     LD=1,0,0,1,1 INC=1 ALU=any
        
        ; Step 3
        ucode_byte_low      REG=0 CDB=#0 CRB=#0 WM=0 FETCH=1 ISSUE=1
        ucode_byte_high     LD=0,0,0,1,1 INC=1 ALU=any

_BRANCH:
        ; BUS[@R] ; PC ++ -> AR, PC ; FETCH ; ISSUE
        ucode_byte_low      REG=0 CDB=#0 CRB=#0 WM=0 FETCH=1 ISSUE=1
        ucode_byte_high     LD=0,0,0,1,1 INC=1 ALU=any
        
        ; PC + DI -> PC, AR
        ucode_byte_low      REG=1 CDB=#3 CRB=#0 WM=0 FETCH=0 ISSUE=0
        ucode_byte_high     LD=0,0,0,1,1 INC=0 ALU=add
        
        ; FETCH ; PC ++ -> PC, AR;
        ucode_byte_low      REG=0 CDB=#0 CRB=#0 WM=0 FETCH=1 ISSUE=0
        ucode_byte_high     LD=0,0,0,1,1 INC=1 ALU=mov
        
        ; FETCH ; ISSUE ;
        ucode_byte_low      REG=0 CDB=#0 CRB=#0 WM=0 FETCH=1 ISSUE=1
        ucode_byte_high     LD=0,0,0,1,1 INC=1 ALU=mov
        

_JUMP:
        ; PC -> R ;
        ucode_byte_low      REG=1 CDB=#0 CRB=#0 WM=0 FETCH=0 ISSUE=0
        ucode_byte_high     LD=1,0,0,0,0 INC=0 ALU=mov
        
        ; REG[@Y] + DI -> PC, AR
        ucode_byte_low      REG=1 CDB=#3 CRB=#0 WM=0 FETCH=0 ISSUE=0
        ucode_byte_high     LD=0,0,0,1,1 INC=0 ALU=add
        
        ; FETCH ; PC ++ -> PC, AR ;
        ucode_byte_low      REG=0 CDB=#0 CRB=#0 WM=0 FETCH=1 ISSUE=0
        ucode_byte_high     LD=0,0,0,1,1 INC=1 ALU=mov
        
        ; FETCH ; ISSUE ;
        ucode_byte_low      REG=0 CDB=#0 CRB=#0 WM=0 FETCH=1 ISSUE=1
        ucode_byte_high     LD=0,0,0,1,1 INC=1 ALU=mov
        

_LOAD_Y:
        ; REG[@Y] + DI -> AR
        ucode_byte_low      REG=2 CDB=#3 CRB=#0 WM=0 FETCH=0 ISSUE=0
        ucode_byte_high     LD=0,0,0,1,0 INC=0 ALU=add
        
        ; PC -> AR ; MEM -> B
        ucode_byte_low      REG=1 CDB=#0 CRB=#0 WM=0 FETCH=0 ISSUE=0
        ucode_byte_high     LD=0,0,1,1,0 INC=0 ALU=mov
        
        ; PC ++ -> AR, PC ; FETCH ; ISSUE
        ucode_byte_low      REG=0 CDB=#1 CRB=#0 WM=0 FETCH=1 ISSUE=1
        ucode_byte_high     LD=1,0,0,1,1 INC=1 ALU=mov
       
        padding
        
_ALU_UNARY:
        ; DI -> ALU_B ; REG[@R] -> ALU_A ; ALU -> REG[@R] ; PC ++ -> PC ; PC ++ -> AR ; FETCH ; ISSUE
        ucode_byte_low      REG=0 CDB=#3 CRB=#1 WM=0 FETCH=1 ISSUE=1
        ucode_byte_high     LD=1,0,0,1,1 INC=1 ALU=any
        
        padding
        
        padding
        
        padding

_STORE_Y:
        ; REG[@Y] + DI -> AR
        ucode_byte_low      REG=2 CDB=#3 CRB=#0 WM=0 FETCH=0 ISSUE=0
        ucode_byte_high     LD=0,0,0,1,0 INC=0 ALU=add
        
        ; REG[@R] -> MEM_D ;
        ucode_byte_low      REG=0 CDB=#0 CRB=#0 WM=0 FETCH=0 ISSUE=0
        ucode_byte_high     LD=0,1,0,0,0 INC=0 ALU=mov
        
        ; PC -> AR ; WRITE
        ucode_byte_low      REG=1 CDB=#0 CRB=#0 WM=1 FETCH=0 ISSUE=0
        ucode_byte_high     LD=0,0,0,1,1 INC=0 ALU=mov
        
        ; PC ++ -> AR, PC ; FETCH ; ISSUE
        ucode_byte_low      REG=0 CDB=#0 CRB=#0 WM=0 FETCH=1 ISSUE=1
        ucode_byte_high     LD=1,0,0,1,1 INC=1 ALU=mov
        
_STORE_ZP:
        ; DI -> AR
        ucode_byte_low      REG=0 CDB=#3 CRB=#0 WM=0 FETCH=0 ISSUE=0
        ucode_byte_high     LD=0,0,0,1,0 INC=0 ALU=mov
        
        ; REG[@R] -> MEM_D ;
        ucode_byte_low      REG=0 CDB=#0 CRB=#0 WM=0 FETCH=0 ISSUE=0
        ucode_byte_high     LD=0,1,0,0,0 INC=0 ALU=mov
        
        ; WRITE ; PC -> AR
        ucode_byte_low      REG=1 CDB=#0 CRB=#0 WM=1 FETCH=0 ISSUE=0
        ucode_byte_high     LD=0,0,0,1,0 INC=0 ALU=mov
        
        ; FETCH ; ISSUE
        ucode_byte_low      REG=0 CDB=#0 CRB=#0 WM=0 FETCH=1 ISSUE=1
        ucode_byte_high     LD=0,0,0,1,1 INC=1 ALU=mov
    
_FETCH:
        ; Step 0        --    Init Only: LD B, [AR]
        ucode_byte_low      REG=0 CDB=#0 CRB=#0 WM=0 FETCH=0 ISSUE=0
        ucode_byte_high     LD=0,0,1,0,0 INC=0 ALU=mov
        
        ; Step 1        --    Init Only: LD PC, B ; LD AR, B
        ucode_byte_low      REG=0 CDB=#1 CRB=#0 WM=0 FETCH=0 ISSUE=0
        ucode_byte_high     LD=0,0,0,1,1 INC=0 ALU=mov
        
        ; Step 2        --    Init Only: Fetch
        ucode_byte_low      REG=0 CDB=#0 CRB=#0 WM=0 FETCH=1 ISSUE=0
        ucode_byte_high     LD=0,0,0,1,1 INC=1 ALU=any
        
        ; Step 3        --    Init Only: Fetch & Issue
        ucode_byte_low      REG=0 CDB=#0 CRB=#0 WM=0 FETCH=1 ISSUE=1
        ucode_byte_high     LD=0,0,0,1,1 INC=1 ALU=any
        
        ; Pipeline valid: 1 instruction in FETCH, 1 instruction ISSUED
        
_IRQ:
        ; move ED to AR
        ; move L to D ; move PC to L ; move mem to B
        ; move ED to PC
        ; move PC++ to AR
        ; write mem ; move B to PC, AR
        ; fetch ; PC ++ to AR, PC
        ; fetch & issue